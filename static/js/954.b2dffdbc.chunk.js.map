{"version":3,"file":"static/js/954.b2dffdbc.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KACnB,CAAE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,C,sGC2CA,EApDe,WACb,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAY,eDIoBC,ECJpB,GDIoBA,ECJpB,UAAG,+GAEMC,MAAM,4FAAD,OACkEP,IAH7E,YAEXQ,EAFW,QAMJC,GANI,iCAOID,EAASE,OAPb,OAOTC,EAPS,OAQfR,EAAUQ,EAAKC,SARA,wBAUfC,QAAQlB,MAAM,gCAVC,0DAajBkB,QAAQlB,MAAM,+BAAd,MAbiB,yDDKhB,WACL,IAAImB,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIpB,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMoB,EAAGY,MAAMJ,EAAME,GACzB,SAAS3B,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAO6B,GACdlC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS6B,EACnE,CACA9B,OAAM+B,EACR,GACF,GClBoB,qDAiBdpB,GACFK,GAEH,GAAE,CAACL,IAMJ,OACE,4BACE,wBAAI,yBACJ,kBACEqB,KAAK,OACLC,YAAY,2CACZ5B,MAAOM,EACPuB,SAX0B,SAACC,GAC/BvB,EAAWuB,EAAMC,OAAO/B,MACzB,KAWG,wBACGQ,EAAOwB,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADL,QAQnB,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Movies/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Movies.css'; // Import the CSS file for styling\r\n\r\nconst Movies = () => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Function to search for movies with the keyword\r\n    const searchMovies = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=9fbbc1dbcdf3b809aeff0a64d74456cb&query=${keyword}`\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setMovies(data.results);\r\n        } else {\r\n          console.error('Error al buscar películas');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al buscar películas', error);\r\n      }\r\n    };\r\n\r\n    if (keyword) {\r\n      searchMovies();\r\n    }\r\n  }, [keyword]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    setKeyword(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Buscar Películas</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar películas por palabra clave...\"\r\n        value={keyword}\r\n        onChange={handleSearchInputChange}\r\n      />\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <li key={movie.id}>\r\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","useState","keyword","setKeyword","movies","setMovies","useEffect","searchMovies","fn","fetch","response","ok","json","data","results","console","self","this","args","arguments","apply","err","undefined","type","placeholder","onChange","event","target","map","movie","to","id","title"],"sourceRoot":""}