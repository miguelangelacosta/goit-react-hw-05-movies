{"version":3,"file":"static/js/922.49e521ba.chunk.js","mappings":"mOA8DA,MAzDA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAuBjB,OArBAC,EAAAA,EAAAA,YAAU,WACR,IACMC,EAAe,6CAAyCV,EAAzC,oBADN,oCAGfW,MAAMD,GACHE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,MACjB,IACAJ,MAAK,SAACK,GACLb,EAAgBa,GAChBX,GAAW,EACZ,IACAY,OAAM,SAACC,GACNC,QAAQD,MAAM,+CAA6CA,GAC3Db,GAAW,EACZ,GACJ,GAAE,CAACN,KAGF,iBAAKqB,UAAU,0BAAf,WACE,mBAAQC,QAAS,kBAAMf,GAAU,EAAhB,EAAoBc,UAAU,YAA/C,SAA2D,oBAC1DhB,GACC,uBAAG,2CACDF,GACF,4BACE,eAAIkB,UAAU,cAAd,SAA6BlB,EAAaoB,SAC1C,eAAGF,UAAU,eAAb,UAA4B,oBAAelB,EAAaqB,iBACxD,eAAGH,UAAU,iBAAb,UAA8B,aAAWlB,EAAasB,YACrDtB,EAAauB,cACZ,gBACEC,IAAG,yCAAoCxB,EAAauB,aACpDE,IAAKzB,EAAaoB,MAClBF,UAAU,kBAId,iBAAKA,UAAU,cAAf,WACE,SAAC,KAAD,CAAMQ,GAAE,gBAAW7B,GAAnB,SAA8B,gBAC9B,SAAC,KAAD,CAAM6B,GAAE,mBAAc7B,GAAtB,SAAiC,0BAIrC,uBAAG,oDAIV,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport './MovieDetails.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction MovieDetails() {\r\n  const { movieId } = useParams();\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const apiKey = '9fbbc1dbcdf3b809aeff0a64d74456cb';\r\n    const movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\r\n\r\n    fetch(movieDetailsUrl)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setMovieDetails(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error al obtener detalles de la película:', error);\r\n        setLoading(false);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"movie-details-container\">\r\n      <button onClick={() => navigate(-1)} className=\"back-link\">Volver atrás</button>\r\n      {loading ? (\r\n        <p>Cargando detalles de la película...</p>\r\n      ) : movieDetails ? (\r\n        <div>\r\n          <h1 className=\"movie-title\">{movieDetails.title}</h1>\r\n          <p className=\"movie-rating\">Calificación: {movieDetails.vote_average}</p>\r\n          <p className=\"movie-overview\">Sinopsis: {movieDetails.overview}</p>\r\n          {movieDetails.poster_path && (\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\r\n              alt={movieDetails.title}\r\n              className=\"movie-poster\"\r\n            />\r\n          )}\r\n\r\n          <div className=\"movie-links\">\r\n            <Link to={`/cast/${movieId}`}>Ver elenco</Link>\r\n            <Link to={`/reviews/${movieId}`}>Ver revisiones</Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No se encontraron detalles de la película.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","loading","setLoading","navigate","useNavigate","useEffect","movieDetailsUrl","fetch","then","response","ok","Error","json","data","catch","error","console","className","onClick","title","vote_average","overview","poster_path","src","alt","to"],"sourceRoot":""}